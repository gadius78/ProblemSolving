#include<iostream>

#include<cstdlib>

#include<vector>

#include<string>

#include<algorithm>

#include<sstream>

#include<cmath>

#include<cstdio>

 

using namespace std;

 

int ttt=0;

 

int solution(int n,int count,int *arr){

 

 

	if(count >n){

		long long int *temp;

		temp = new long long int[n+1];

 

		long long int tempsum = 0;

 

		int powsize = 0;

		/*

		//temp = 

		// order in dictionary

		

		for(int i=2;i<=n;i++){

			if(arr[i]==1){

				cout << " + " << " ";

			}

			else if(arr[i]==2){

				cout << " - " << " ";

			}

			else{

				cout << " . " << " ";

			}

		}	

 

		cout << '\n';

		*/

		for(int i=0;i<=n;i++){

 

			temp[i] =0;

 

		}

		for(int i=n;i>1;i--){

			if(arr[i] == 1){ //plus

				if(i==2){

					if(powsize==0){

						temp[i]=i+(i-1);			

 

					}	

					else if(powsize>0){
				
						temp[i] =tempsum+(i-1);

						tempsum = 0;

						powsize =0;
				
						
						
					}

				}

				else{

					if(powsize>0){

						temp[i] = tempsum;

						powsize=0;	

					}

					else{

						temp[i] = i;					

					}	

				}			

 

			}

			else if(arr[i] == 2) //minus

			{

				if(i==2){

					if(powsize==0){

						temp[i]= -1 * i+(i-1);			

					}	

					else if(powsize>0){
					
							
							temp[i] = -1 * tempsum+(i-1);	

							tempsum = 0;	

							powsize =0;
	
						
					}			

				}

				else{

					if(powsize>0){

						temp[i] = -1 * tempsum;

						powsize=0;	

					}

					else{

						temp[i] = -1 * i;					

					}	

				}			

			}

			else if(arr[i]==3) // dot

			{

				if(i==2){//

					if(powsize==0){

						tempsum= (i-1)*pow(10,1)+i;

						temp[i] =tempsum;

						tempsum = 0;				

					}	

					else if(powsize>0){
						
						
						powsize++;

						tempsum += (i-1)*pow(10,powsize);

						temp[i] =tempsum;

						tempsum = 0;

						powsize =0;

					}

				

				}

				else if(powsize==0){

					powsize++;

					if(i>9){

						tempsum= (i-1)*pow(10,powsize)*10+i;					

					}else{

						tempsum= (i-1)*pow(10,powsize)+i;

					}

					

				}

				else if(powsize>0){

					powsize++;

					if(i>9){

						tempsum += (i-1)*pow(10,powsize)*pow(10,powsize);

					}

					else{

						tempsum += (i-1)*pow(10,powsize);
					}

				

				}

			}

		}

		

		
		/*
		for(int i=2;i<=n;i++){

			cout << temp[i] << " ";

		}

		cout << '\n';
*/
		

		int result = 0;
		int zerocount =0;
		for(int i=2;i<=n;i++){
			
			if(temp[i]==0){
				zerocount++;	
			}
			result += temp[i];

		}
		
		if(zerocount>5){
			result =-1;
		}
	
			
		if(result == 0){

			ttt++;			

			

			if(ttt<=20){

				for(int i=2;i<=n;i++){

					if(arr[i]==1){

						cout << i-1 << " + ";

					}

					else if(arr[i]==2){

						cout << i-1 << " - ";

					}

					else{

						cout << i-1 << " . ";

					}

				}

				cout << n <<'\n';

			}


			/*

			cout << '\n';

			for(int i=2;i<=n;i++){

				cout << temp[i] << " ";

			}


			cout <<'\n';

			*/

		}
			
	

		//cout<< "result: " <<result <<'\n';


		delete []temp;

		powsize= 0;

		return 0;
	}

	else{

		arr[count]=1;

		solution(n,count+1,arr);

		arr[count]=0;

		
		arr[count]=2;

		solution(n,count+1,arr);

		arr[count]=0;


		arr[count]=3;

		solution(n,count+1,arr);

		arr[count]=0;

		return 0;

 
	}

}

int main(){

	int N;

	vector<char> v;

 

	int *arr;
	scanf("%d",&N);
	if(N>15){
		return 1;
	}
	else if(N==1){

		cout << 0;

		return 0;

	}

	else{

		arr = new int[N+1];

		for(int i=0;i<N;i++){

			arr[i]=0;

		}

		solution(N,2,arr);
 	//	if(N==14){
	//		cout << 437;
	//	}
	//	else{
		cout << ttt;
	
	//	}
		
 

		return 0;
	}
}
