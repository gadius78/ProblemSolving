     #include<cstdio>
#include<iostream>
#include<queue>
#include<algorithm>
#include<vector>
 
using namespace std;
 
queue< pair<int,int> > q;
int map[26][26];
vector<int> ans;
 
 
int solution(int x,int y,int range){
    if(map[x][y]==0) return 0;
 
    q.push(make_pair(x,y));
    int now_x;
    int now_y;
    int count=0;
    pair<int,int> temp;
    while(!q.empty()){
        temp = q.front();
        q.pop();
        now_x = temp.first;
        now_y = temp.second;
    
        if(map[now_x][now_y]==1){
            map[now_x][now_y] =0;
            count++;
        }
 
        /*===============================*/
        if(now_x+1 < range && map[now_x+1][now_y] ==1){
            map[now_x+1][now_y] =0;
            count++;
            q.push(make_pair(now_x+1,now_y));
        }
#if 1
        if(now_x-1 >= 0 && map[now_x-1][now_y] ==1){
            map[now_x-1][now_y] =0;
            count++;
            q.push(make_pair(now_x-1,now_y));
        }
        if(now_y+1 < range && map[now_x][now_y+1] ==1){
            map[now_x][now_y+1] =0;
            count++;
            q.push(make_pair(now_x,now_y+1));
        }
        if(now_y-1 >= 0 && map[now_x][now_y-1] ==1){
            map[now_x][now_y-1] =0;
            count++;
            q.push(make_pair(now_x,now_y-1));
        }
#endif
    }
 
    return count;
}
 
int main(){
 
    int N;
 
    scanf("%d",&N);
 
    for(int i=0;i<N;i++){
        for(int j=0;j<N;j++){
        scanf("%1d",&map[i][j]);
        }
    }
    
 
    int value=0;
    for(int i=0;i<N;i++){
        for(int j=0;j<N;j++){
            value = solution(i,j,N);
            if(value !=0){
                ans.push_back(value);
            }
            
        }
    }
 
//    cout <<    solution(0,2,N) << endl;
    /*
    cout << "======================================"<<endl;
    for(int i=0;i<N;i++){
        for(int j=0;j<N;j++){
        printf("%1d",map[i][j]);
        }
        cout << endl;
    }
    */
    cout << ans.size() << endl;
    sort(ans.begin(),ans.end());
    for(int i=0;i<ans.size();i++){
        cout << ans[i] << endl;
    }
 
 
    return 0;
}
